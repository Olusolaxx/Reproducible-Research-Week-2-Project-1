qplot(carat, price, data = diamonds, color = cut, facets = .~ cut) + geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd]
skip
diamonds[myd, ]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth("lm", size = 3, color = "pink")
skip
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
hc
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "red")
5
abline(h = 0.05, col = "red")
8
skip
10
skip
12
abline(h = 0.05, col = "red")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
skip
points(x, y, pch =)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
skip
tapply
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 6, cex = 2, lwd = 2)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot()
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("add")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
swirl()
library(swirl)
swirl()
swirl()
q()
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta" lwd = 4)
skip
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data data = pollution, col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
skip
east <- subset(pollution, region == "east")
head(east)
hist(pm25, col = "green")
hist(east$pm25, col = "green")
hist(west$pm25, col = "green", region == "west")
west <- subset(pollution, region == "west")
hist(subset(pollution, region == "west")$pm25,  col = "green")
skip
with(pollution, plot(latitude, pm25))
skip
abline(h = 12, lwd = 2, lty = 2)
skip
plot(pollution$latitude, ppm, col = pollution$region)
skip
abline(h = 12, lwd = 2, lty = 2)
skip
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
skip
west <- subset(pollution,region=="west")
skip
plot(west$latitude, west$pm25, main = "West")
skip
skip
plot(east$latitude, east$pm25, main = "East")
swirl()
library(swirl)
library(swirl)
swirl()
library(swirl)
swirl()
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
sum(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
sum(state)
str(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone(ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone(ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone(ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par()$fg
par()$pch
par()$fg
par()$lty
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NY")
title(main = "Wind and Ozone in NYC")
Sip
skip
may <- subset(airquality, Month == 5)
skip
points(may$Wind,may$Ozone,col="blue",pch=17)
skip
notmay <- subset(airquality, Month! = 5)
notmay <- subset(airquality, Month!=5)
skip
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
skip
legend("topright", pch = c(17, 8), col + c("blue", "red"), legend = c("May", "Other Months"))
legend("topright", pch = c(17, 8), col = c("blue", "red"), legend = c("May", "Other Months"))
skip
abline(v = median())
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
skip
par()
par(mfrow = c(1, 2))
plot(airquality$Wind, air)
plot(airquality$Wind, airquality$Ozone, main =  "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main =  "Ozone and Solar")
plot(airquality$Ozone, airquality$Solar.R, main =  "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main =  "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main =  "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
skip
mtext("Ozone and Weather in New York City", outer = TRUE)
q()
args(mean)
args(rnorm)
mean
rnorm()
rnorm
q()
q()
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt < - sqrt(z - 1)
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <-  z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_ my_div
my_div
q()
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
dir()
?liist.files
?list.files
args(list.files)
q()
library(swirl)
swirl()
skip
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.remove("mytest.R")
file.copy("mytest2.R", mytest.R)
file.copy("mytest2.R", "mytest.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2")$file.path("testdir3")
skip
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(1, 10, by = 0.5)
seq(0, 10, by = 0.5)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
q()
library(swirl)
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = "")
paste(my_char, collapse = " ")
my_name <- c(my_char, "Sola")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-" )
x ,- c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x x 3
x3
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
mean(my_na)
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
library(swirl)
swirl()
any(ints < 0)
all(ints > 0)
q
90
q()
library(swirl)
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
getwd()
setwd
library("data.table")
library("gglot2")
librar
library("gglot2")
library("ggplot2")
p
nei <- readRDS("C://Users//Olusola//Desktop//ExData_Project2//summarySCC_PM25.rds")
scc <- readRDS("C://Users//Olusola//Desktop//ExData_Project2//Source_Classification_Code.rds")
merged <- merge(nei, scc, by="SCC")
df <- data.table(merged)
# Filter records to those which contains the word 'coal' in Short.Name
coal <- grepl("coal", df$Short.Name, ignore.case=TRUE)
coal <- data.table(merged[coal, ])
by_year <- coal[, list(emissions=sum(Emissions)), by=c('year')]
by_year$year = as.numeric(as.character(by_year$year))
by_year$emissions = as.numeric(as.character(by_year$emissions))
ggplot(data=by_year, aes(x=year, y=emissions)) + geom_line() + geom_point() + ggtitle("Emissions from Coal Sources in the US")
dev.copy(png, file="plot4.png", width=480, height=480)
dev.off()
q()
getwd()
q()
library(swirl)
swirl()
viewinfo()
class(flat)
class(flags)
as.list(flags)
cls_list <- (flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
cls_vect
sum(flags$orange)
flags_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
q()
q()
q()
library(ggplot2)
H1 <- ggplot(data = na.omit(stepsDaily), aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
xlab("Total number of steps Daily") +
ylab("Frequency") +
ggtitle("Histogram of the Total Numner of Steps Taken Each Day")
# Set working directory
# Download file
setwd("C://Users//Olusola//Desktop//RR_WK2")
activityDataFileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
activityDataZipFile <- "activity.zip"
if (!file.exists(activityDataZipFile)) {
download.file(activityDataFileUrl, activityDataZipFile, mode = "wb")
}
# unzip downloaded file
activityDataFile <- "activity"
if (!file.exists(activityDataFile)) {
unzip(activityDataZipFile)
}
# Read data into object variable dataFile
dataFile <- read.csv("activity.csv")
# Observe data using summary()
summary(dataFile)
# Change date from object of class factor to object of class date
dataFile$date <- as.Date(as.character(dataFile$date))
# Observe data again
summary(dataFile)
# Create data without NAs to compute mean later
dataFileNAs <- is.na(dataFile$steps)
cleanDataFile <- dataFile[!dataFileNAs,]
# Use tapply() to calculate the total number of steps taken per day
stepsDaily <- tapply(dataFile$steps, dataFile$date, sum, na.rm = TRUE)
head(stepsDaily)
library(ggplot2)
H1 <- ggplot(data = na.omit(stepsDaily), aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
xlab("Total number of steps Daily") +
ylab("Frequency") +
ggtitle("Histogram of the Total Numner of Steps Taken Each Day")
?ggplot
library(ggplot2)
H1 <- ggplot(data = stepsDaily, aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
xlab("Total number of steps Daily") +
ylab("Frequency") +
ggtitle("Histogram of the Total Numner of Steps Taken Each Day")
summary(stepsDaily)
str(stepsDaily)
is.array(stepsDaily)
is.data.frame(stepsDaily)
q()
sessionInfo()
q()
setwd("C://Users//Olusola//Desktop//RR_WK2")
dataFile <- read.csv("activity.csv")
imputing <- dataFile
imputing$steps <- impute(dataFile$steps, mean)
library(Hmisc)
imputing$steps <- impute(dataFile$steps, mean)
dataFile2 <- imputing$steps
dataFile2 <- weekdays(dataFile2$date)
str(dataFile2)
str(imputing$steps)
is.array(dataFile)
is.array(dataFile2)
is.data.frame(dataFile)
is.data.frame(dataFile2)
str(dataFile)
is.imputed(dataFile)
is.imputed(dataFile2)
is.vector(dataFile)
is.vector(dataFile2)
class(dataFile2)
class(dataFile)
unclass(dataFile)
unclass(dataFile2)
dataFile3 <- as.data.frame(dataFile2)
str(dataFile3)
str(dataFile)
head(dataFile3)
dataFile3
dataFile4 <- as.data.frame(dataFile2, do.call(cbind, imputing$date, imputing$interval))
dataFile4 <- as.data.frame(dataFile2, do.call(cbind, imputing[date], imputing[interval]))
dataFile4 <- as.data.frame(dataFile2, do.call(cbind, imputing[date], imputing[interval]))
dataFile4 <- as.data.frame(dataFile2, do.call(cbind, imputing$date))
t4 <- cb
dataFile4 <- as.data.frame(dataFile2, do.call(cbind, list(imputing$date, imputing$interval)))
head(dataFile4)
str(dataFile4)
dataFile4 <- as.data.frame(dataFile2, do.call(cbind(list(imputing$date, imputing$interval))))
dataFile4 <- as.data.frame(dataFile2, do.call(cbind, list(imputing$date, imputing$interval)))
dataFile4 <- as.data.frame(dataFile2, do.call(cbind, by = list(imputing$date, imputing$interval)))
imputing$dating <- ifelse(as.POSIXlt(imputing$date)$wday %in% c(0,6), "Weekend", "Weekday")
imputing$dating <- ifelse(as.POSIXlt(imputing$date)$week %in% c(0,6), "Weekend", "Weekday")
imputing$dating <- ifelse(as.POSIXlt(imputing$date)$wday %in% c(0,6), "Weekend", "Weekday")
imputing$dating <- ifelse(as.POSIXlt(imputing$date)$week %in% c(0,6), "Weekend", "Weekday")
meanImputing <- aggregate(steps ~ interval + dating, imputing, mean)
head(imputing)
head(meanImputing)
q()
